#!/bin/bash
#
# backup_home.cron: script para hacer copias de seguridad de la 
# configuracion del sistema.
#
# (C) 2006 - 2009 Martin Andres Gomez Gimenez <mggimenez@i-nis.com.ar>
# Distributed under the terms of the GNU General Public License v3
#
# Revision : $Id$



HOST=`hostname`
NAME="backup_home.cron"

# Variables a editar por el usuario:
# BACKUP_PATH: Ubicación de la copia de seguridad
# OMITIR: listado de directorios a omitir.
BACKUP_PATH="/home/admin/backup/$HOST/home"
OMITIR="aquota.user aquota.group cache portage public_ftp samba spamtrap"

# Opciones de copia de seguridad con tar y bzip2
HOME_PATH="/home"
FECHA=$(date +%G%m%d)
FILE="backup"
EXT="tar.bz2"

# Algoritmos para verificar sumas
HASHES="md5sum sha1sum sha256sum"

# Variables de tmpwatch
# (Requiere el paquete app-admin/tmpwatch)
# TMPWATCH: ruta al binario de tmpwatch
# MTIME: tiempo de modificación utilizado para borrar archivos 
# por defecto 720 (1 mes)
TMPWATCH="/usr/sbin/tmpwatch"
MTIME="180"



# Función para enviar mensajes vía syslog. Utiliza la interfaz de comando
# denominada logger. Para más detalles vea: man logger
message_syslog () {
  local MESSAGE="$1"
  logger -i -t $NAME $MESSAGE
}



# Función para verificar la existencia de un directorio. Si este no existe es
# creado. Recibe como argumento el nombre del directorio a verificar. 
directory_mkdir() {
  local DIRECTORY="$1"

  if [ ! -e $DIRECTORY ]; then
    mkdir --parents --mode=755 $DIRECTORY
    message_syslog "El directorio $DIRECTORY fue creado"
  fi

}



# Verificación de existencia para $BACKUP_PATH
directory_mkdir "$BACKUP_PATH"



# Creación de archivo comprimido según la fecha del día
cd $HOME_PATH

for directory in $(find * -maxdepth 0 -type d);
do

  omite="FALSE"
  
  for omitir in $OMITIR;
  do
  
    if [ "$directory" = "$omitir" ]; then
      omite="TRUE"
    fi

  done

  if  [ "$omite" = "FALSE" ]; then
    tar cpf - $directory --exclude=backup/*/* | bzip2 -f > \
    $BACKUP_PATH/$FILE-$directory-$FECHA.$EXT
  fi

done


# Creación del archivo de sumas MD5 y SHA1
cd $BACKUP_PATH

for file in $(find *-$FECHA.$EXT -maxdepth 0 -type f); do

  for hash in $HASHES; do
    SUM=`$hash $file`
    echo "$SUM" >> $file.DIGEST
    message_syslog "La suma $hash fue creada: $SUM"
  done

done



# Borrado de copias de seguridad antiguas con tmpwatch
if [[ -d $BACKUP_PATH ]]; then
  ${TMPWATCH} --mtime $MTIME $BACKUP_PATH
  message_syslog "Las copias con antigüedad mayor a $MTIME hs fueron borradas."
fi

